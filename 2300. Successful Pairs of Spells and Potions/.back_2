package main

import "fmt"

func successfulPairs(spells []int, potions []int, success int64) []int {
	result := make([]int, len(spells))
	ch := make(chan *Result)
	for i, v := range spells {
		go resolve(v, i, potions, success, ch)
	}
	for range spells {
		resolveResult := <-ch
		result[resolveResult.Index] = resolveResult.Value
	}

	return result
}

type Result struct {
	Value int
	Index int
}

func resolve(spell int, spell_post int, potions []int, success int64, ch chan (*Result)) {
	counter := 0
	for _, vv := range potions {
		if int64(vv*spell) >= success {
			counter++
		}
	}

	ch <- &Result{
		Index: spell_post,
		Value: counter,
	}
}

func main() {
	spells := []int{5, 1, 3}
	potions := []int{1, 2, 3, 4, 5}
	success := 7

	fmt.Printf("[4,0,3] == %+v", successfulPairs(spells, potions, int64(success)))
}
